name: Build and Upload Artifacts

on:
  push:
    branches:
      - "*"
  pull_request:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: windows-2022 # Use Windows runner for C++ projects
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
          
    steps:
      # Step 1: Check out the repository with submodules
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive # Get all submodules recursively

      # Step 2: Set up MSBuild directly (faster than installing build tools)
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      # Step 3: Set up .NET environment
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      # Step 4: Setup vcpkg and install MinHook with improved error handling
      - name: Setup vcpkg and Install MinHook
        run: |
          # Clone vcpkg with a timeout
          git clone --depth=1 https://github.com/microsoft/vcpkg
          
          # Bootstrap vcpkg with timeout
          $bootstrapProcess = Start-Process -FilePath ".\vcpkg\bootstrap-vcpkg.bat" -NoNewWindow -PassThru -Wait
          if ($bootstrapProcess.ExitCode -ne 0) {
            Write-Error "vcpkg bootstrap failed with exit code $($bootstrapProcess.ExitCode)"
            exit 1
          }
          
          # Integrate vcpkg with VS
          .\vcpkg\vcpkg integrate install
          
          # Install MinHook with timeout
          $installProcess = Start-Process -FilePath ".\vcpkg\vcpkg" -ArgumentList "install minhook:x64-windows" -NoNewWindow -PassThru -Wait
          if ($installProcess.ExitCode -ne 0) {
            Write-Error "MinHook installation failed with exit code $($installProcess.ExitCode)"
            exit 1
          }
          
          # Create directories
          mkdir -p lib -Force
          mkdir -p include -Force
          mkdir -p S2MP-Mod\lib -Force
          
          # Copy files with error handling
          $VcpkgRoot = ".\vcpkg\installed\x64-windows"
          
          if (Test-Path "$VcpkgRoot\lib\minhook.lib") {
            Copy-Item "$VcpkgRoot\lib\minhook.lib" -Destination "lib\libMinHook.x64.lib" -Force
            Copy-Item "$VcpkgRoot\lib\minhook.lib" -Destination "S2MP-Mod\lib\libMinHook.x64.lib" -Force
          } else {
            Write-Error "MinHook library not found at expected location"
            Get-ChildItem -Path "$VcpkgRoot\lib" -Recurse | ForEach-Object { Write-Host $_.FullName }
            exit 1
          }
          
          if (Test-Path "$VcpkgRoot\include\MinHook.h") {
            Copy-Item "$VcpkgRoot\include\MinHook.h" -Destination "include\MinHook.h" -Force
          } else {
            Write-Error "MinHook header not found at expected location"
            Get-ChildItem -Path "$VcpkgRoot\include" -Recurse | ForEach-Object { Write-Host $_.FullName }
            exit 1
          }

      # Step 5: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step 6: Build the solution with optimized settings
      - name: Build the solution
        run: |
          # Display the library path in the project file for debugging
          Get-Content S2MP-Mod\S2MP-Mod.vcxproj | Select-String "libMinHook"
          
          # Build with additional library directories and additional dependencies specified
          msbuild /m /p:MultiProcessorCompilation=true /maxcpucount /v:minimal /p:Configuration=${{ matrix.configuration }} /p:Platform=x64 /p:AdditionalLibraryDirectories="$(Get-Location)\lib" /p:AdditionalDependencies="libMinHook.x64.lib;%(AdditionalDependencies)" S2MP-Mod.sln

      # Step 7: Upload build artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.configuration }}-artifacts
          path: |
            **/bin/${{ matrix.configuration }}/
            **/bin/x64/${{ matrix.configuration }}/
