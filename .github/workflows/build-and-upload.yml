name: Build and Upload Artifacts

on:
  push:
    branches:
      - "*"
  pull_request:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: windows-2022 # Use Windows runner for C++ projects
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
          
    steps:
      # Step 1: Check out the repository with submodules
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive # Get all submodules recursively

      # Step 2: Set up MSBuild directly (faster than installing build tools)
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      # Step 3: Set up .NET environment
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      # Step 4: Setup vcpkg and install MinHook with improved file finding
      - name: Setup vcpkg and Install MinHook
        id: setup-minhook
        run: |
          # Create directories
          mkdir -Force lib
          mkdir -Force include
          mkdir -Force "S2MP-Mod\lib"

          # Install vcpkg and MinHook if needed
          if (-not (Test-Path "vcpkg")) {
              git clone --depth=1 https://github.com/microsoft/vcpkg
              .\vcpkg\bootstrap-vcpkg.bat
              .\vcpkg\vcpkg integrate install
              .\vcpkg\vcpkg install minhook:x64-windows
          }

          # Find and copy MinHook files
          $VcpkgRoot = ".\vcpkg\installed\x64-windows"
          $MinHookLibPath = Get-ChildItem -Path "$VcpkgRoot\lib" -Filter "*minhook*.lib" | Select-Object -First 1 -ExpandProperty FullName
          $MinHookHeaderPath = Get-ChildItem -Path "$VcpkgRoot\include" -Filter "*minhook*.h" -Recurse | Select-Object -First 1 -ExpandProperty FullName

          Write-Host "MinHook Library Path: $MinHookLibPath"
          Write-Host "MinHook Header Path: $MinHookHeaderPath"
          
          # Save paths for later steps
          "MINHOOK_LIB_PATH=$MinHookLibPath" >> $env:GITHUB_OUTPUT
          "MINHOOK_HEADER_PATH=$MinHookHeaderPath" >> $env:GITHUB_OUTPUT

          # Copy the files
          Copy-Item $MinHookLibPath -Destination "lib\libMinHook.x64.lib" -Force
          Copy-Item $MinHookHeaderPath -Destination "include\MinHook.h" -Force

          # Create a directory structure that matches the build-time path
          mkdir -Force "S2MP-Mod\lib" -ErrorAction SilentlyContinue
          Copy-Item $MinHookLibPath -Destination "S2MP-Mod\lib\libMinHook.x64.lib" -Force
          
          # For debugging: List all important locations
          Write-Host "Workspace directories:"
          Get-ChildItem -Directory | Format-Table Name
          
      # Step 5: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step 6: Build the solution with optimized settings
      - name: Build the solution
        shell: pwsh
        run: |
          # Set up paths
          $LibPath = "$PWD\lib"
          $ProjectLibPath = "$PWD\S2MP-Mod\lib"
          
          Write-Host "Main Library Path: $LibPath"
          Write-Host "Project Library Path: $ProjectLibPath"
          
          # Verify libraries exist
          if (Test-Path "$LibPath\libMinHook.x64.lib") {
            Write-Host "Found libMinHook.x64.lib in main lib directory"
          }
          if (Test-Path "$ProjectLibPath\libMinHook.x64.lib") {
            Write-Host "Found libMinHook.x64.lib in project lib directory"
          }

          # Build with properly escaped library paths
          msbuild `
            /p:Configuration=${{ matrix.configuration }} `
            /p:Platform=x64 `
            "/p:AdditionalLibraryDirectories=""$LibPath;$ProjectLibPath""" `
            S2MP-Mod.sln

      # Step 7: Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.configuration }}-artifacts
          path: |
            **/bin/${{ matrix.configuration }}/
            **/bin/x64/${{ matrix.configuration }}/
            x64/${{ matrix.configuration }}/
